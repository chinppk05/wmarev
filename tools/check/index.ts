import mongoose from "mongoose"
import Excel from "exceljs"

import Payment from "../../src/models/payment";
import Receipt from "../../src/models/receipt";
mongoose.connect('mongodb://localhost:27017/wma', { useNewUrlParser: true, useUnifiedTopology: true })

let check = ['642002309',
  '642002310',
  '642002311',
  '642002312',
  '642002313',
  '642002314',
  '642002315',
  '642002316',
  '642002317',
  '642002318',
  '642002319',
  '642002320',
  '642002321',
  '642002322',
  '642002323',
  '642002324',
  '642002325',
  '642002326',
  '642002327',
  '642002328',
  '642002329',
  '642002330',
  '642002331',
  '642002332',
  '642002333',
  '642002334',
  '642002335',
  '642002336',
  '642002337',
  '642002338',
  '642002339',
  '642002340',
  '642002341',
  '642002342',
  '642002343',
  '642002344',
  '642002345',
  '642002346',
  '642002347',
  '642002348',
  '642002349',
  '642002350',
  '642002351',
  '642002352',
  '642002353',
  '642002354',
  '642002355',
  '642002356',
  '642002357',
  '642002358',
  '642002359',
  '642002360',
  '642002361',
  '642002362',
  '642002363',
  '642002364',
  '642002365',
  '642002366',
  '642002367',
  '642002368',
  '642002369',
  '642002370',
  '642002371',
  '642002372',
  '642002373',
  '642002374',
  '642002375',
  '642002376',
  '642002377',
  '642002378',
  '642002379',
  '642002380',
  '642002381',
  '642002382',
  '642002383',
  '642002384',
  '642002385',
  '642002386',
  '642002387',
  '642002388',
  '642002389',
  '642002390',
  '642002391',
  '642002392',
  '642002393',
  '642002394',
  '642002395',
  '642002396',
  '642002397',
  '642002398',
  '642002399',
  '642002400',
  '642002401',
  '642002402',
  '642002403',
  '642002404',
  '642002405',
  '642002406',
  '642002407',
  '642002408',
  '642002409',
  '642002410',
  '642002411',
  '642002412',
  '642002413',
  '642002414',
  '642002415',
  '642002416',
  '642002417',
  '642002418',
  '642002419',
  '642002420',
  '642002421',
  '642002422',
  '642002423',
  '642002424',
  '642002425',
  '642002426',
  '642002427',
  '642002428',
  '642002429',
  '642002430',
  '642002431',
  '642002432',
  '642002433',
  '642002434',
  '642002435',
  '642002436',
  '642002437',
  '642002438',
  '642002439',
  '642002440',
  '642002441',
  '642002442',
  '642002443',
  '642002444',
  '642002445',
  '642002446',
  '642002447',
  '642002448',
  '642002449',
  '642002450',
  '642002451',
  '642002452',
  '642002453',
  '642002454',
  '642002455',
  '642002456',
  '642002457',
  '642002458',
  '642002459',
  '642002460',
  '642002461',
  '642002462',
  '642002463',
  '642002464',
  '642002465',
  '642002466',
  '642002467',
  '642002468',
  '642002469',
  '642002470',
  '642002471',
  '642002472',
  '642002473',
  '642002474',
  '642002475',
  '642002476',
  '642002477',
  '642002478',
  '642002479',
  '642002480',
  '642002481',
  '642002482',
  '642002483',
  '642002484',
  '642002485',
  '642002486',
  '642002487',
  '642002488',
  '642002489',
  '642002490',
  '642002491',
  '642002492',
  '642002493',
  '642002494',
  '642002495',
  '642002496',
  '642002497',
  '642002498',
  '642002499',
  '642002500',
  '642002501',
  '642002502',
  '642002503',
  '642002504',
  '642002505',
  '642002506',
  '642002507',
  '642002508',
  '642002509',
  '642002510',
  '642002511',
  '642002512',
  '642002513',
  '642002514',
  '642002515',
  '642002516',
  '642002517',
  '642002518',
  '642002519',
  '642002520',
  '642002521',
  '642002522',
  '642002523',
  '642002524',
  '642002525',
  '642002526',
  '642002527',
  '642002528',
  '642002529',
  '642002530',
  '642002531',
  '642002532',
  '642002533',
  '642002534',
  '642002535',
  '642002536',
  '642002537',
  '642002538',
  '642002539',
  '642002540',
  '642002541',
  '642002542',
  '642002543',
  '642002544',
  '642002545',
  '642002546',
  '642002547',
  '642002548',
  '642002549',
  '642002550',
  '642002551',
  '643000728',
  '643000729',
  '643000730',
  '643000731',
  '643000732',
  '643000733',
  '643000734',
  '643000735',
  '643000736',
  '643000737',
  '643000738',
  '643000739',
  '643000740',
  '643000741',
  '643000742',
  '643000743',
  '643000744',
  '643000745',
  '643000746',
  '643000747',
  '643000748',
  '643000749',
  '643000750',
  '643000751',
  '643000752',
  '643000753',
  '643000754',
  '643000755',
  '643000756',
  '643000757',
  '643000758',
  '643000759',
  '643000760',
  '643000761',
  '643000762',
  '643000763',
  '643000764',
  '643000765',
  '643000766',
  '643000767',
  '643000768',
  '643000769',
  '643000770',
  '643000771',
  '643000772',
  '643000773',
  '643000774',
  '643000775',
  '643000776',
  '643000777',
  '643000778',
  '643000779',
  '643000780',
  '643000781',
  '643000782',
  '643000783',
  '643000784',
  '643000785',
  '643000786',
  '643000787',
  '643000788',
  '643000789',
  '643000790',
  '643000791',
  '643000792',
  '643000793',
  '643000794',
  '643000795',
  '643000796',
  '643000797',
  '643000798',
  '643000799',
  '643000800',
  '643000801',
  '643000802',
  '643000803',
  '643000804',
  '643000805',
  '643000806']

const main = async () => {
  let found = 0
  for(const seq of check){
    let findReceipt = await Receipt.findOne({sequence:seq})
    if(!findReceipt) console.log(`${seq} not found`)
    else {
      console.log(found, findReceipt.paymentDate)
      found++
    }
    // console.log(findReceipt)
  }
  console.log("found all", found)
}

main()